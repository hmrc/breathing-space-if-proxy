# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = breathing-space-if-proxy

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.http.filters = "uk.gov.hmrc.breathingspaceifproxy.config.Filters"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Provides an implementation of AuthConnector.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.breathingspaceifproxy.config.ErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Circuit Breaker

# expected_load_per_year / ~days / ~hours_per_day / minutes + 1
# 700000 / 250 / 6 / 60 + 1

circuit.breaker {
  memorandum {
    failedCallsInUnstableBeforeUnavailable = 60
    unavailablePeriodDurationInMillis = 60000 # 1 minute
    unstablePeriodDurationInMillis = 60000 # 1 minute
  }

  if {
    failedCallsInUnstableBeforeUnavailable = 60
    unavailablePeriodDurationInMillis = 60000 # 1 minute
    unstablePeriodDurationInMillis = 60000 # 1 minute
  }
}



httpHeaders.cacheControl = "no-cache, no-store, must-revalidate"

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = false
  logback = false
  enabled = true
}

# Microservice specific config

auditing {
  enabled = false
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

mongodb {
    uri = "mongodb://localhost:27017/breathing-space"
    ttl = 24 hours
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    auth {
      host = localhost
      port = 8500
    }

    integration-framework {
      host = localhost
      port = 9503
      environment = ist0
      auth-token = localhost-only-token
      context = "individuals"
    }
  }
}

feature.flag.memorandum.enabled = "true"

ninoHashingKey = "gn:a$V96?cFHmjjcSz31tU,Xe;hOLIYeknIPIbj6Y2GAyht3#Cs+ir&hd{(50`vGAd/k8OIIV:nbM4,c&z9rX+mmK<?qK`sbmKB*Y#Ip.N'$@sX~W[6{KIXA|k`"
